<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<!--
		typedef struct TString {
		  CommonHeader;
		  lu_byte extra;  /* reserved words for short strings; "has hash" for longs */
		  lu_byte shrlen;  /* length for short strings */
		  unsigned int hash;
		  union {
			size_t lnglen;  /* length for long strings */
			struct TString *hnext;  /* linked list for hash table */
		  } u;
		  char contents[1]; //字符内容
		} TString;
		
		define file : lobject.h:373
	-->
	
	<Type Name="TString">
		<DisplayString>{contents}</DisplayString>
		<StringView>contents</StringView>			<!--放大镜-->
	</Type>

	<Type Name="opcode_natvis">
		<!--OP_MOVE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 0">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_LOADI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 1">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			sbx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0)))))) - (((1&lt;&lt;(8 + 8 + 1))-1)&gt;&gt;1)))}
		</DisplayString>
		<!--OP_LOADF-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 2">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			sbx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0)))))) - (((1&lt;&lt;(8 + 8 + 1))-1)&gt;&gt;1)))}
		</DisplayString>
		<!--OP_LOADK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 3">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			bx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_LOADKX-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 4">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_LOADFALSE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 5">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_LFALSESKIP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 6">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_LOADTRUE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 7">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_LOADNIL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 8">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_GETUPVAL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 9">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_SETUPVAL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 10">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_GETTABUP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 11">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_GETTABLE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 12">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_GETI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 13">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_GETFIELD-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 14">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SETTABUP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 15">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SETTABLE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 16">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SETI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 17">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SETFIELD-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 18">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_NEWTABLE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 19">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SELF-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 20">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_ADDI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 21">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			sc = {(((((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))) - (((1&lt;&lt;8)-1) &gt;&gt; 1))}
		</DisplayString>
		<!--OP_ADDK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 22">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SUBK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 23">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_MULK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 24">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_MODK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 25">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_POWK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 26">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_DIVK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 27">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_IDIVK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 28">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_BANDK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 29">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_BORK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 30">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_BXORK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 31">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SHRI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 32">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			sc = {(((((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))) - (((1&lt;&lt;8)-1) &gt;&gt; 1))}
		</DisplayString>
		<!--OP_SHLI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 33">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			sc = {(((((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))) - (((1&lt;&lt;8)-1) &gt;&gt; 1))}
		</DisplayString>
		<!--OP_ADD-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 34">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SUB-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 35">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_MUL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 36">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_MOD-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 37">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_POW-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 38">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_DIV-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 39">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_IDIV-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 40">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_BAND-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 41">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_BOR-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 42">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_BXOR-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 43">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SHL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 44">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SHR-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 45">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_MMBIN-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 46">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_MMBINI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 47">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_MMBINK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 48">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_UNM-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 49">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_BNOT-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 50">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_NOT-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 51">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_LEN-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 52">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_CONCAT-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 53">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))}
		</DisplayString>
		<!--OP_CLOSE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 54">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_TBC-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 55">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&gt;&gt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_JMP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 56">
			sJ = {(((((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&gt;&gt;(((8 + 8 + 1) + 8))))&lt;&lt;(0)))))) - (((1 &lt;&lt; ((8 + 8 + 1) + 8)) - 1) &gt;&gt; 1)))}
		</DisplayString>
		<!--OP_EQ-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 57">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_LT-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 58">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_LE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 59">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_EQK-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 60">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_EQI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 61">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_LTI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 62">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_LEI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 63">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_GTI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 64">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_GEI-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 65">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_TEST-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 66">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_TESTSET-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 67">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			k = {(((((int)((((code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_CALL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 68">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_TAILCALL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 69">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_RETURN-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 70">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_RETURN0-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 71">
		</DisplayString>
		<!--OP_RETURN1-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 72">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_FORLOOP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 73">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			bx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_FORPREP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 74">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			bx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_TFORPREP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 75">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			bx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_TFORCALL-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 76">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_TFORLOOP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 77">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			bx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_SETLIST-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 78">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			b = {((((((int)((((code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0)))))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_CLOSURE-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 79">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			bx = {(((((int)((((code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_VARARG-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 80">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))},
			c = {(((((int)((((code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))}
		</DisplayString>
		<!--OP_VARARGPREP-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 81">
			a = {(((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))}
		</DisplayString>
		<!--OP_EXTRAARG-->
		<DisplayString Condition="(((unsigned int)(((code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0))))) == 82">
			ax = {(((((int)((((code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(((8 + 8 + 1) + 8))))&lt;&lt;(0))))))))}
		</DisplayString>
	</Type>
	
	<Type Name="Proto">
		<Expand>
			<CustomListItems>
				<Variable Name="item_code" InitialValue="0"/>
				<Variable Name="size_code" InitialValue="0"/>
				<Variable Name="i" InitialValue="0"/>

				<Variable Name="opcode" InitialValue="0"/>
				<Variable Name="A" InitialValue="0"/>
				<Variable Name="B" InitialValue="0"/>
				<Variable Name="C" InitialValue="0"/>
				<Variable Name="Ax" InitialValue="0"/>
				<Variable Name="Bx" InitialValue="0"/>
				<Variable Name="sB" InitialValue="0"/>
				<Variable Name="sC" InitialValue="0"/>
				<Variable Name="sBx" InitialValue="0"/>
				<Variable Name="k" InitialValue="0"/>
				
				<Exec>size_code = sizecode</Exec>

				<Loop>
					<Break Condition="i &gt; size_code"/>
					<Exec>item_code = code[i]</Exec>
					<Exec>opcode = (((int)(((item_code)&gt;&gt;0) &amp; ((~((~(unsigned int)0)&lt;&lt;(7)))&lt;&lt;(0)))))</Exec>
					<Exec>A = (((int)((((item_code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))</Exec>
					<Exec>B = (((void)0), ((((int)((((item_code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))</Exec>
					<Exec>C = (((void)0), ((((int)((((item_code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))</Exec>
					<Exec>Ax = (((void)0), ((((int)((((item_code)&gt;&gt;((0 + 7))) &amp; ((~((~(unsigned int)0)&lt;&lt;(((8 + 8 + 1) + 8))))&lt;&lt;(0))))))))</Exec>
					<Exec>Bx = (((void)0), ((((int)((((item_code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0))))))))</Exec>
					<Exec>sB = (((((void)0), ((((int)((((item_code)&gt;&gt;((((0 + 7) + 8) + 1))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))) - (((1&lt;&lt;8)-1) &gt;&gt; 1))</Exec>
					<Exec>sC = (((((void)0), ((((int)((((item_code)&gt;&gt;(((((0 + 7) + 8) + 1) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(8)))&lt;&lt;(0))))))))) - (((1&lt;&lt;8)-1) &gt;&gt; 1))</Exec>
					<Exec>sBx = (((void)0), ((((int)((((item_code)&gt;&gt;(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;((8 + 8 + 1))))&lt;&lt;(0)))))) - (((1&lt;&lt;(8 + 8 + 1))-1)&gt;&gt;1)))</Exec>
					<Exec>k = (((void)0), ((((int)((((item_code)>>(((0 + 7) + 8))) &amp; ((~((~(unsigned int)0)&lt;&lt;(1)))&lt;&lt;(0))))))))</Exec>

					<Item Condition="opcode == 0" Name="MOVE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 1" Name="LOADI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 2" Name="LOADF">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 3" Name="LOADK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 4" Name="LOADKX">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 5" Name="LOADFALSE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 6" Name="LFALSESKIP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 7" Name="LOADTRUE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 8" Name="LOADNIL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 9" Name="GETUPVAL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 10" Name="SETUPVAL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 11" Name="GETTABUP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 12" Name="GETTABLE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 13" Name="GETI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 14" Name="GETFIELD">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 15" Name="SETTABUP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 16" Name="SETTABLE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 17" Name="SETI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 18" Name="SETFIELD">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 19" Name="NEWTABLE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 20" Name="SELF">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 21" Name="ADDI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 22" Name="ADDK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 23" Name="SUBK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 24" Name="MULK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 25" Name="MODK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 26" Name="POWK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 27" Name="DIVK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 28" Name="IDIVK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 29" Name="BANDK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 30" Name="BORK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 31" Name="BXORK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 32" Name="SHRI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 33" Name="SHLI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 34" Name="ADD">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 35" Name="SUB">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 36" Name="MUL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 37" Name="MOD">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 38" Name="POW">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 39" Name="DIV">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 40" Name="IDIV">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 41" Name="BAND">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 42" Name="BOR">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 43" Name="BXOR">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 44" Name="SHL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 45" Name="SHR">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 46" Name="MMBIN">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 47" Name="MMBINI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 48" Name="MMBINK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 49" Name="UNM">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 50" Name="BNOT">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 51" Name="NOT">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 52" Name="LEN">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 53" Name="CONCAT">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 54" Name="CLOSE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 55" Name="TBC">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 56" Name="JMP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 57" Name="EQ">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 58" Name="LT">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 59" Name="LE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 60" Name="EQK">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 61" Name="EQI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 62" Name="LTI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 63" Name="LEI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 64" Name="GTI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 65" Name="GEI">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 66" Name="TEST">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 67" Name="TESTSET">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 68" Name="CALL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 69" Name="TAILCALL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 70" Name="RETURN">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 71" Name="RETURN0">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 72" Name="RETURN1">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 73" Name="FORLOOP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 74" Name="FORPREP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 75" Name="TFORPREP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 76" Name="TFORCALL">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 77" Name="TFORLOOP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 78" Name="SETLIST">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 79" Name="CLOSURE">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 80" Name="VARARG">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 81" Name="VARARGPREP">*((opcode_natvis *)&amp;item_code)</Item>
					<Item Condition="opcode == 82" Name="EXTRAARG">*((opcode_natvis *)&amp;item_code)</Item>
					<Exec>i = i + 1</Exec>
				</Loop>
			</CustomListItems>
		</Expand>
	</Type>
	
	
	
	  <!--
		有ctb标志代表着可gc
  
		//nil
		LUA_VNIL ((0) | ((0) << 4))       0
    LUA_VEMPTY ((0) | ((1) << 4))     16
    LUA_VABSTKEY ((0) | ((2) << 4))   32
    
    //bool
    LUA_VFALSE ((1) | ((0) << 4))     1
    LUA_VTRUE ((1) | ((1) << 4))      17
    
    //thread
    LUA_VTHREAD ((8) | ((0) << 4))    8
    ctb
    LUA_VTHREAD 72
    
    //number
    LUA_VNUMINT ((3) | ((0) << 4))    3
    LUA_VNUMFLT ((3) | ((1) << 4))    19
    
    //string
    LUA_VSHRSTR ((4) | ((0) << 4))    4
    LUA_VLNGSTR ((4) | ((1) << 4))    20
    ctb + 64
    LUA_VSHRSTR 68
    LUA_VLNGSTR 84
    
    //userdata
    LUA_VLIGHTUSERDATA ((2) | ((0) << 4)) 2
    LUA_VUSERDATA ((7) | ((0) << 4))   7
    ctb
    LUA_VUSERDATA 71
    
    //proto
    LUA_VPROTO (((9+1)) | ((0) << 4))  10
    
    //function
    LUA_VUPVAL ((9) | ((0) << 4))      9
    LUA_VLCL ((6) | ((0) << 4))        6
    LUA_VLCF ((6) | ((1) << 4))        22
    LUA_VCCL ((6) | ((2) << 4))        38
    ctb
    LUA_VLCL 70
    LUA_VCCL 102
    
    //table
    LUA_VTABLE ((5) | ((0) << 4))      5
    ctb
    LUA_VTABLE 69
    
  -->
  
  <Type Name="Node">
		<DisplayString Condition="i_val.tt_==0">nil</DisplayString>
		<DisplayString Condition="i_val.tt_==16">empty</DisplayString>
		<DisplayString Condition="i_val.tt_==32">LUA_VABSTKEY</DisplayString>
    
		<DisplayString Condition="i_val.tt_==1">false</DisplayString>
		<DisplayString Condition="i_val.tt_==17">true</DisplayString>
    
		<DisplayString Condition="i_val.tt_==8">{((lua_State *)(i_val.value_.gc))}</DisplayString>
		<!--ctb-->
		<DisplayString Condition="i_val.tt_==72">{((lua_State *)(i_val.value_.gc))}</DisplayString>
    
		<DisplayString Condition="i_val.tt_==3">{i_val.value_.i}</DisplayString>
		<DisplayString Condition="i_val.tt_==19">{i_val.value_.n}</DisplayString>
    
		<DisplayString Condition="i_val.tt_==4">{((TString *)(i_val.value_.gc))->contents}</DisplayString>
			<DisplayString Condition="i_val.tt_==20">{((TString *)(i_val.value_.gc))->contents}</DisplayString>
		<!--ctb-->
		<DisplayString Condition="i_val.tt_==68">{((TString *)(i_val.value_.gc))->contents}</DisplayString>
		<DisplayString Condition="i_val.tt_==84">{((TString *)(i_val.value_.gc))->contents}</DisplayString>
    
		<DisplayString Condition="i_val.tt_==2">{i_val}</DisplayString>
		<DisplayString Condition="i_val.tt_==7">{i_val}</DisplayString>
		<!--ctb-->
		<DisplayString Condition="i_val.tt_==71">{i_val}</DisplayString>

		<DisplayString Condition="i_val.tt_==10">{i_val}</DisplayString>

		<DisplayString Condition="i_val.tt_==9">upval</DisplayString>
		<DisplayString Condition="i_val.tt_==6">luafunction</DisplayString>
		<DisplayString Condition="i_val.tt_==22">cfunction</DisplayString>
		<DisplayString Condition="i_val.tt_==38">C closure</DisplayString>
		<!--ctb-->
		<DisplayString Condition="i_val.tt_==70">luafunction</DisplayString>
		<DisplayString Condition="i_val.tt_==102">C closure</DisplayString>

		<DisplayString Condition="i_val.tt_==5">table</DisplayString>
		<DisplayString Condition="i_val.tt_==69">table</DisplayString>
		<StringView>(TString *)(u.key_val.gc)</StringView>
    <Expand>
      
        <CustomListItems Condition="i_val.tt_==5 || i_val.tt_==69">
          <Variable Name="asize" InitialValue="0" />
          <Variable Name="lsize" InitialValue="0" />
          <Variable Name="i" InitialValue="0" />
          <Variable Name="item" InitialValue="(TValue *)0" />
          <Variable Name="item_node" InitialValue="(Node *)0" />
          <Variable Name="item_node_string" InitialValue="(TString *)0" />
          <Variable Name="key_type" InitialValue="0" />
          <Variable Name="uint_key" InitialValue="0" />
          <Variable Name="_table" InitialValue="(Table *)0"/>

          <Exec>_table = (Table *)i_val.value_.gc</Exec>
          <Exec>asize = _table->alimit</Exec>
          <Exec>lsize = (1 &lt;&lt; _table->lsizenode)</Exec>
          <Loop>
            <Break Condition="i &gt;= asize"/>
            <Exec>item = _table->array + i</Exec>
            <Item Name = "{i+1}" Condition="(item->tt_ &amp; 0x0f) != 0">item</Item>
            <Exec>i = i + 1</Exec>
          </Loop>
          <Exec>i = 0</Exec>
          <Loop>
            <Break Condition="i &gt;= lsize"/>
            <Exec>item_node = _table->node + i</Exec>
            <Exec>key_type = (item_node->u.key_tt &amp; 0x0f)</Exec>
            <Exec>item_node_string = (TString *)item_node->u.key_val.gc</Exec>
            <Exec>uint_key = (unsigned long long)item_node->u.key_val.gc</Exec>
            <Item Name = "{item_node_string}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 4)">item_node</Item>
            <Item Name = "{item_node->u.key_val.i}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 3)">item_node</Item>
            <Item Name = "uint_key" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 3) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 4)">item_node</Item>
            <Exec>i = i + 1</Exec>
          </Loop>
        </CustomListItems>

    </Expand>
  </Type>
  <Type Name="Table">
	<DisplayString>size=2 ^ {(int)lsizenode} + {alimit}</DisplayString>
	<Expand>
		<CustomListItems>
			<Variable Name="asize" InitialValue="0" />
			<Variable Name="lsize" InitialValue="0" />
			<Variable Name="i" InitialValue="0" />
			<Variable Name="item" InitialValue="(TValue *)0" />
			<Variable Name="item_node" InitialValue="(Node *)0" />
			<Variable Name="item_node_string" InitialValue="(TString *)0" />
			<Variable Name="uint_key" InitialValue="0" />
			<Variable Name="key_type" InitialValue="0" />
			<Exec>asize = alimit</Exec>
			<Exec>lsize = (1 &lt;&lt; lsizenode)</Exec>
			<Loop>
				<Break Condition="i &gt;= asize"/>
				<Exec>item = array + i</Exec>
				<Item Name = "{i+1}" Condition="(item->tt_ &amp; 0x0f) != 0">item</Item>
				<Exec>i = i + 1</Exec>
			</Loop>
			<Exec>i = 0</Exec>
			<Loop>
				<Break Condition="i &gt;= lsize"/>
				<Exec>item_node = node + i</Exec>
				<Exec>key_type = (item_node->u.key_tt &amp; 0x0f)</Exec>
				<Exec>item_node_string = (TString *)item_node->u.key_val.gc</Exec>
				<Exec>uint_key = (unsigned long long)item_node->u.key_val.gc</Exec>
				<Item Name = "{item_node_string}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 4)">item_node</Item>
				<Item Name = "{item_node->u.key_val.i}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 3)">item_node</Item>
				<Item Name = "uint_key" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 3) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 4)">item_node</Item>
				<Exec>i = i + 1</Exec>
			</Loop>
		</CustomListItems>
	</Expand>
  </Type>
  
  
  <Type Name="TValue">
		<!--nil-->
		<DisplayString Condition="tt_==0">nil</DisplayString>
		<DisplayString Condition="tt_==16">empty</DisplayString>
		<DisplayString Condition="tt_==32">LUA_VABSTKEY</DisplayString>
		<!--bool-->
		<DisplayString Condition="tt_==1">false</DisplayString>
		<DisplayString Condition="tt_==17">true</DisplayString>
		<!--thread-->
		<DisplayString Condition="tt_==8">thread</DisplayString>
		<DisplayString Condition="tt_==72">thread</DisplayString>
		<!--number-->
		<DisplayString Condition="tt_==3">{value_.i}</DisplayString>
		<DisplayString Condition="tt_==19">{value_.n}</DisplayString>
		<!--string-->
		<DisplayString Condition="tt_==4">{((TString *)(value_.gc))->contents}</DisplayString>
		<DisplayString Condition="tt_==20">{((TString *)(value_.gc))->contents}</DisplayString>
		<DisplayString Condition="tt_==68">{((TString *)(value_.gc))->contents}</DisplayString>
		<DisplayString Condition="tt_==84">{((TString *)(value_.gc))->contents}</DisplayString>
		<!--userdata-->
		<DisplayString Condition="tt_==2">lightuserdata</DisplayString>
		<DisplayString Condition="tt_==7">userdata</DisplayString>
		<DisplayString Condition="tt_==71">userdata</DisplayString>
		<!--proto-->
		<DisplayString Condition="tt_==10">proto</DisplayString>
		<!--function-->
		<DisplayString Condition="tt_==9">upval</DisplayString>
		<DisplayString Condition="tt_==6">luafunction</DisplayString>
		<DisplayString Condition="tt_==22">cfunction</DisplayString>
		<DisplayString Condition="tt_==38">C closure</DisplayString>
		<DisplayString Condition="tt_==70">luafunction</DisplayString>
		<DisplayString Condition="tt_==102">C closure</DisplayString>
		<!--table-->
		<DisplayString Condition="tt_==5">table</DisplayString>
		<DisplayString Condition="tt_==69">table</DisplayString>
		<Expand>
		<Item Name="value" Condition="tt_==0">tt_</Item>
		<Item Name="value" Condition="tt_==16">tt_</Item>
		<Item Name="value" Condition="tt_==32">tt_</Item>
    
		<Item Name="value" Condition="tt_==1">tt_</Item>
		<Item Name="value" Condition="tt_==17">tt_</Item>

    <CustomListItems Condition="tt_==8 || tt_== 72">
      <Variable Name="it" InitialValue="(StackValue * )0" />
      <Variable Name="_thread" InitialValue="(lua_State *)0"/>

      <Exec>_thread = (lua_State *)value_.gc</Exec>
      <Exec>it = _thread->stack</Exec>
      <Loop>
        <Break Condition="it == _thread->top"/>
        <Item>it->val</Item>
        <Exec>it = it + 1</Exec>
      </Loop>
    </CustomListItems>
    
		<Item Name="value" Condition="tt_==3">value_.i</Item>
		<Item Name="value" Condition="tt_==19">value_.f</Item>
    
		<Item Name="value" Condition="tt_==4">((TString *)(value_.gc))->contents</Item>
		<Item Name="value" Condition="tt_==20">((TString *)(value_.gc))->contents</Item>
		<Item Name="value" Condition="tt_==68">((TString *)(value_.gc))->contents</Item>
		<Item Name="value" Condition="tt_==84">((TString *)(value_.gc))->contents</Item>
    
		<Item Name="value" Condition="tt_==2">tt_</Item>
		<Item Name="value" Condition="tt_==7">tt_</Item>
		<Item Name="value" Condition="tt_==71">tt_</Item>

		<Item Name="value" Condition="tt_==10">tt_</Item>

		<Item Name="value" Condition="tt_==9">tt_</Item>
		<Item Name="value" Condition="tt_==6">tt_</Item>
		<Item Name="value" Condition="tt_==22">tt_</Item>
		<Item Name="value" Condition="tt_==38">tt_</Item>
		<Item Name="value" Condition="tt_==70">tt_</Item>
		<Item Name="value" Condition="tt_==102">tt_</Item>

    <CustomListItems Condition="tt_==5 || tt_==69">
      <Variable Name="asize" InitialValue="0" />
      <Variable Name="lsize" InitialValue="0" />
      <Variable Name="i" InitialValue="0" />
      <Variable Name="item" InitialValue="(TValue *)0" />
      <Variable Name="item_node" InitialValue="(Node *)0" />
      <Variable Name="item_node_string" InitialValue="(TString *)0" />
      <Variable Name="key_type" InitialValue="0" />
      <Variable Name="uint_key" InitialValue="0" />
      <Variable Name="_table" InitialValue="(Table *)0"/>

      <Exec>_table = (Table *)value_.gc</Exec>
      <Exec>asize = _table->alimit</Exec>
      <Exec>lsize = (1 &lt;&lt; _table->lsizenode)</Exec>
      <Loop>
        <Break Condition="i &gt;= asize"/>
        <Exec>item = _table->array + i</Exec>
        <Item Name = "{i+1}" Condition="(item->tt_ &amp; 0x0f) != 0">i+1,item</Item>
        <Exec>i = i + 1</Exec>
      </Loop>
      <Exec>i = 0</Exec>
      <Loop>
        <Break Condition="i &gt;= lsize"/>
        <Exec>item_node = _table->node + i</Exec>
        <Exec>key_type = (item_node->u.key_tt &amp; 0x0f)</Exec>
        <Exec>item_node_string = (TString *)item_node->u.key_val.gc</Exec>
        <Exec>uint_key = (unsigned long long)item_node->u.key_val.gc</Exec>
        <Item Name = "{item_node_string}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 4)">item_node</Item>
        <Item Name = "{item_node->u.key_val.i}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 3)">item_node</Item>
        <Item Name = "uint_key" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 3) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 4)">item_node</Item>
        <Exec>i = i + 1</Exec>
      </Loop>
    </CustomListItems>
	</Expand>
  </Type>
  
  
  <Type Name="lua_State">
	<Expand>
    <Synthetic Name="luaRegistry">
      <DisplayString>{l_G->l_registry}</DisplayString>
      <Expand>
        <CustomListItems>
          <Variable Name="asize" InitialValue="0" />
          <Variable Name="lsize" InitialValue="0" />
          <Variable Name="i" InitialValue="0" />
          <Variable Name="item" InitialValue="(TValue *)0" />
          <Variable Name="item_node" InitialValue="(Node *)0" />
          <Variable Name="item_node_string" InitialValue="(TString *)0" />
          <Variable Name="key_type" InitialValue="0" />
          <Variable Name="uint_key" InitialValue="0" />
          <Variable Name="_table" InitialValue="(Table *)0"/>

          <Exec>_table = (Table *)l_G->l_registry.value_.gc</Exec>
          <Exec>asize = _table->alimit</Exec>
          <Exec>lsize = (1 &lt;&lt; _table->lsizenode)</Exec>
          <Loop>
            <Break Condition="i &gt;= asize"/>
            <Exec>item = _table->array + i</Exec>
            <Item Name = "{i+1}" Condition="(item->tt_ &amp; 0x0f) != 0">i+1,item</Item>
            <Exec>i = i + 1</Exec>
          </Loop>
          <Exec>i = 0</Exec>
          <Loop>
            <Break Condition="i &gt;= lsize"/>
            <Exec>item_node = _table->node + i</Exec>
            <Exec>key_type = (item_node->u.key_tt &amp; 0x0f)</Exec>
            <Exec>item_node_string = (TString *)item_node->u.key_val.gc</Exec>
            <Exec>uint_key = (unsigned long long)item_node->u.key_val.gc</Exec>
            <Item Name = "{item_node_string}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 4)">item_node</Item>
            <Item Name = "{item_node->u.key_val.i}" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) == 3)">item_node</Item>
            <Item Name = "uint_key" Condition="((item_node->u.key_tt &amp; 0x0f) != 0) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 3) &amp;&amp; ((item_node->u.key_tt &amp; 0x0f) != 4)">item_node</Item>
            <Exec>i = i + 1</Exec>
          </Loop>
        </CustomListItems>
      </Expand>
    </Synthetic>
    
		<CustomListItems>
			<Variable Name="it" InitialValue="(StackValue * )0" />
			<Exec>it = stack</Exec>
			<Loop>
				<Break Condition="it == top"/>
				<Item>it->val</Item>
				<Exec>it = it + 1</Exec>
			</Loop>
		</CustomListItems>
	</Expand>
  </Type>
  
</AutoVisualizer>
